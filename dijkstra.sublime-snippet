<snippet>
	<content><![CDATA[

// for finding minimum distance in weighted directed graph
// does not work for negative weight cycles
void dijkstra(){
    // set the vertices distances as infinity
    // set all vertex as unvisited
    dist[1] = 0;
    multiset < pair < ll , int > > ms; 
    // {distance,node}

    ms.insert({0 , 1});
    // insert the source node with distance = 0

    while(!ms.empty()){

        auto p = *ms.begin();
        ms.erase(ms.begin());

        int u = p.s;
        int wei = p.f;
        // wei has no function except that for multiset ordering


        if( vis[u] ) continue;
        vis[u] = true;

        for(auto y: adj[u]){
       		// assuming adj is {node,distance};
            int v = y.f;
            int w = y.s;
            if(dist[u] + w < dist[v]  ){
                dist[v] = dist[u] + w;
                ms.insert({dist[v],  v} );
            }
        }
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>snipdijkstra</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
